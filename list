#!/usr/bin/env bash

_list_intro() {
    lists=$(_fav_list)
    if [ -z "$lists" ]; then
        echo "lists is empty"
        echo "try $SCRIPT_NAME search"
    fi
    for list in $(_fav_list all); do
        echo "$list"
    done
}

create_list() {
    echo
    echo "My lists: "
    _list_intro
    echo
    read -rp "Type a new list name: " NEW_LIST
    echo
    # replace spaces with - in $NEW_LIST
    NEW=$NEW_LIST
    NAME="${NEW// /-}"
    touch "$FAVORITE_PATH/$NAME.json"
    echo "[]" >"$FAVORITE_PATH/$NAME.json"
    echo "$NAME is created."
    list_menu
}

delete_list() {
    echo
    echo "My lists: "
    _list_intro
    echo
    read -rp "Type a new list name to delete: " LIST
    echo
    rm "$FAVORITE_PATH/$LIST.json" 2>/dev/null || {
        echo "$LIST doesn't exist."
        list_menu
    }
    echo "$LIST is deleted"
    echo
    echo "My lists: "
    _list_intro
    echo
    list_menu
}

show_lists() {
    echo
    echo "My lists: "
    _list_intro
    echo
}

edit_list() {
    echo
    echo "My lists: "
    _list_intro
    echo
    read -rp "Type a list name to edit: " LIST
    echo "Old name: $LIST"
    read -rp "Type a new name: " NEW
    echo "New name: $NEW"
    mv "$FAVORITE_PATH/$LIST.json" "$FAVORITE_PATH/$NEW.json" &>/dev/null || {
        echo "$LIST doesn't exist. Try again."
        list_menu
    }
    show_lists
}

list_menu() {
    echo -ne "
$APP_NAME LIST MENU:
$(greenprint '1)') Create a list
$(greenprint '2)') Delete a list
$(greenprint '3)') Edit a list
$(greenprint '4)') Show all lists
$(greenprint '5)') Go back to the main menu
$(greenprint '0)') Exit
$(blueprint 'Choose an option:') "
    read -r a
    case $a in
    1)
        create_list
        list_menu
        ;;
    2)
        delete_list
        list_menu
        ;;
    3)
        edit_list
        list_menu
        ;;
    4)
        show_lists
        list_menu
        ;;
    5)
        echo "Go back to the main menu"
        menu
        ;;
    0)
        echo "Bye bye."
        exit 0
        ;;
    *)
        redprint "Wrong option."
        exit 1
        ;;
    esac
}
