#!/usr/bin/env bash

_save_station_to_list() {
    FILE1="/tmp/radio_favorite.json"
    FILE2="/tmp/radio_favorite2.json"
    _cleanup_tmp $FILE1
    _cleanup_tmp $FILE2
    TEMP_FILE=$(mktemp "$FILE1")
    TEMP_FILE2=$(mktemp "$FILE2")
    echo
    ANS=$1
    # echo $ANS
    echo "Select the list to save to: "
    # echo saving
    LIST_NAME=$(_show_favlist)
    echo "$LIST_NAME"
    FAVORITE_FULL="${FAVORITE_PATH}/${LIST_NAME}.json"
    # echo "$FAVORITE_FULL"
    # get item from "$SEARCH_RESULTS" using $ANS

    jq ".[$ANS-1]" <"$SEARCH_RESULTS" >"$TEMP_FILE"
    # add the item to the fav list
    # jq '. += [input]' "$FAVORITE_FULL" "$TEMP_FILE"
    jq '. += [input]' "$FAVORITE_FULL" "$TEMP_FILE" >"$TEMP_FILE2" && mv "$TEMP_FILE2" "$FAVORITE_FULL"
    # which list?
    echo "Successfull save it to your $LIST_NAME list."
}

_search_play() {
    FILE="/tmp/radio_listening.json"
    _cleanup_tmp $FILE
    # echo "$1" # this is a list number in "$SEARCH_RESULTS"
    ANS=$1
    jq -r ".[$ANS-1]" <"$SEARCH_RESULTS" >$FILE
    URL_RESOLVED=$(jq -r ".[$ANS-1] |.url_resolved" <"$SEARCH_RESULTS")
    mpv "$URL_RESOLVED"
    echo
    read -rp "Do you want to save this staion? (yes/y/no/n) " RES
    USER_ANS=$(echo "$RES" | cut -c 1-1 | tr "[:lower:]" "[:upper:]")
    if [[ $USER_ANS = "Y" ]]; then
        _save_station_to_list "$ANS"
    fi
}

_save_play() {
    echo "Save & Play"
}

search_by() {
    KEY=$1
    SEARCH_RESULTS=$(mktemp /tmp/radio_searches.json)
    echo
    read -rp "Type a $KEY to search: " RES
    OPTS=()
    for TAG in "${RES[@]}"; do
        OPTS+=(-d "$KEY=$TAG")
    done

    curl -X POST "${OPTS[@]}" "$SEARCH_URL" -o "$SEARCH_RESULTS" >&/dev/null
    # cat "$SEARCH_RESULTS"
    LENGTH=$(jq length "$SEARCH_RESULTS")

    # check $SEARCH_RESULT has length is more than 0
    if (("$LENGTH" < 1)); then
        echo "No result. Try again."
        search_menu
    fi
    jq -r '.[].name' <"$SEARCH_RESULTS" | nl
    echo
    read -rp "Select a number. " ANS
    # echo "$ANS"

    # URL_RESOLVED=$(jq -r ".[$ANS-1] |.url_resolved" <"$SEARCH_RESULTS")
    search_submenu "$ANS"
    # rm "$SEARCH_RESULTS"
}

# uses radio-browser.info bytag and grep
# use country codes
# after search result ask a number to play/save
# tera search jazz US
fn_search() {
    # curl -X POST -d 'tag=jazz&countrycode=au&state=queensland' http://91.132.145.114/json/stations/search
    # curl -X POST -d 'tag=$1' -d 'countrycode=AU' $SEARCH_URL
    OPTS=()
    if [ $# -ge 1 ] && [ -n "$1" ]; then
        OPTS+=(-d "tag=$1")
    fi
    # echo "countrycode: $COUNTRYCODE"
    if [ -n "$COUNTRYCODE" ]; then
        OPTS+=(-d "countrycode=$COUNTRYCODE")
    fi
    # echo "name: $NAME"
    if [ -n "$NAME" ]; then
        OPTS+=(-d "name=$NAME")
    fi
    # echo "language: $LANGUAGE"
    if [ -n "$LANGUAGE" ]; then
        OPTS+=(-d "language=$LANGUAGE")
    fi
    # echo "state: $STATE"
    if [ -n "$STATE" ]; then
        OPTS+=(-d "state=$STATE")
    fi
    # echo "OPTS are : "
    # echo "${OPTS[@]}"
    SEARCH_RESULTS=$(mktemp /tmp/radio_searches.json)
    SEARCH_RESULT=$(mktemp /tmp/radio_search.json)
    TEMP_FILE=$(mktemp /tmp/radio_favorite.json)
    TEMP_FILE2=$(mktemp /tmp/radio_favorite2.json)
    echo
    curl -X POST "${OPTS[@]}" "$SEARCH_URL" -o "$SEARCH_RESULTS" >&/dev/null
    jq -r '.[].name' <"$SEARCH_RESULTS" | nl
    echo
    # cat "$SEARCH_RESULTS"
    read -rp "Select a number. " NUM
    # STATION_NUM=$NUM
    jq ".[$NUM]" <"$SEARCH_RESULTS" >"$SEARCH_RESULT"
    # echo "Station no.: $STATION_NUM"
    echo
    echo "Do you want to: "
    echo
    PS3="Enter a number: "
    select LIST in "Play" "Save" "Save & play" "Create"; do
        # echo "Selected list: $LIST"
        break
    done
    echo "you selected $LIST"
    echo "reply $REPLY"
    # rm "$SEARCH_RESULTS"
    # rm "/tmp/*.json"
    # exit

    case $REPLY in
    1)
        url=$(jq -r '.url_resolved' <"$1")
        _play "$url"
        ;;
    2)
        fn_save "$@"
        ;;
    3)
        fn_save_play
        ;;
    4)
        fn_create
        echo "hi"
        ;;
    --) ;; # no subcommand, arguments only
    esac

    echo "Searching ..."
    # works

    curl "$RADIO_BROWSER/$1" | jq --arg COUNTRYCODE "$COUNTRYCODE" '[.[] | select(.countrycode==$COUNTRYCODE)]' >"$TEMP_FILE"
    # shows station names
    jq -r '.[].name' <"$TEMP_FILE" | nl

    # ls "$TEMP_FILE"
    # cat "$TEMP_FILE"
    # after search result ask a number to play/save
    read -rp "Select a number to add to your favirite list. " ANS
    # get the content
    jq ".[$ANS-1]" <"$TEMP_FILE" >"$TEMP_FILE2"

    # 1
    # jq '. += ["$TEMP_FILE2"]' "$FAVORITE_FULL" "$TEMP_FILE2"
    # 2
    # jq --argjson TEMP "$(cat "$TEMP_FILE2")" '. += [$TEMP]' "$FAVORITE_FULL" >"$TEMP_FILE" && mv "$TEMP_FILE" "$FAVORITE_FULL"
    jq '. += [input]' "$FAVORITE_FULL" "$TEMP_FILE2" >"$TEMP_FILE" && mv "$TEMP_FILE" "$FAVORITE_FULL"

    # cleanup
    rm -f "$TEMP_FILE"
    rm -f "$TEMP_FILE2"
    echo "Added a new station."
}

search_submenu() {
    echo -ne "
$APP_NAME SEARCH SUB MENU:
$(greenprint '1)') Play
$(greenprint '2)') Save
$(greenprint '3)') Go back to the Search menu
$(greenprint '4)') Go back to the Main menu
$(greenprint '0)') Exit
$(blueprint 'Choose an option:') "
    read -r a
    case $a in
    1)
        _search_play "$ANS"
        search_menu
        ;;
    2)
        _save_station_to_list "$ANS"
        search_menu
        ;;
    3)
        echo "Go back to the Search menu"
        search_menu
        ;;
    4)
        echo "Go back to the Main menu"
        menu
        ;;
    0) exit 0 ;;
    *)
        redprint 'Wrong option.'
        exit 1
        ;;
    esac
}

search_menu() {
    _cleanup_tmp "/tmp/radio_searches.json"
    echo -ne "
$APP_NAME SEARCH MENU:
$(ColorGreen '1)') Tag
$(ColorGreen '2)') Name
$(ColorGreen '3)') Language 
$(ColorGreen '4)') Country code
$(ColorGreen '5)') State
$(ColorGreen '6)') Advanced search
$(ColorGreen '7)') Main Menu
$(ColorGreen '0)') Exit
$(ColorBlue 'Choose an option:') "
    read -r a
    case $a in
    1)
        search_by tag
        search_menu
        ;;
    2)
        search_by name
        search_menu
        ;;
    3)
        echo "Search by language"
        search_by language
        search_menu
        ;;
    4)
        search_by countrycode
        search_menu
        ;;
    5)
        search_by state
        search_menu
        ;;
    6)
        advanced_search
        search_menu
        ;;
    7)
        menu
        ;;
    0)
        echo "Bye bye."
        exit 0
        ;;
    *)
        redprint "Wrong option."
        exit 1
        ;;
    esac
}
